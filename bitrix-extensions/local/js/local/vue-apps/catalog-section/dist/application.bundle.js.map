{"version":3,"file":"application.bundle.js","sources":["../src/stores/data.js","../src/components/application.js","../src/loader.js"],"sourcesContent":["import { defineStore } from 'ui.vue3.pinia';\r\n\r\nexport const dataStore = defineStore('data', {\r\n  state: () => ({\r\n    userid: '',\r\n    sessid: '',\r\n    signedParameters: '',\r\n  }),\r\n});\r\n","import './application.css';\r\n\r\nimport { CatalogElement } from 'local.vue-components.catalog-element';\r\n\r\nimport { mapState, mapActions } from 'ui.vue3.pinia';\r\nimport { dataStore } from '../stores/data';\r\n\r\nexport const Application = {\r\n  data() {\r\n    return {};\r\n  },\r\n  components: {\r\n    CatalogElement,\r\n  },\r\n  // language=Vue\r\n\r\n  template: `\r\n    <div class=\"slr2-catalog-section\">\r\n      <CatalogElement v-for=\"element in 20\" :key=\"element\" /> \r\n    </div>\r\n\t`,\r\n  computed: {\r\n    ...mapState(dataStore, ['sessionid', 'signedParameters']),\r\n  },\r\n  methods: {\r\n    // ...mapActions(tableStore, [\r\n    //   'hideErrorTable',\r\n    //   'runColumnsNames',\r\n    //   'runItems',\r\n    //   'runDefaultSort',\r\n    //   'runSetDefaultSort',\r\n    // ]),\r\n  },\r\n  mounted() {},\r\n};\r\n","import { BitrixVue } from 'ui.vue3';\r\nimport { Application } from './components/application';\r\nimport { createPinia, setActivePinia } from 'ui.vue3.pinia';\r\nimport { dataStore } from './stores/data';\r\n\r\nexport class CatalogSection {\r\n  #store;\r\n  #rootNode;\r\n  #application;\r\n\r\n  constructor(rootNode, options): void {\r\n    this.#store = createPinia();\r\n    this.#rootNode = document.querySelector(rootNode);\r\n    this.options = options;\r\n  }\r\n\r\n  run(): void {\r\n    const self = this;\r\n\r\n    this.#application = BitrixVue.createApp({\r\n      name: 'Catalog Section',\r\n      components: {\r\n        Application,\r\n      },\r\n      template: '<Application/>',\r\n      mounted() {\r\n        dataStore().userid = self.options.userid || '';\r\n        dataStore().sessid = self.options.sessid || '';\r\n        dataStore().signedParameters = self.options.signedParameters || '';\r\n      },\r\n    });\r\n\r\n    this.#application.use(this.#store);\r\n    this.#application.mount(this.#rootNode);\r\n  }\r\n\r\n  initStorageBeforeStartApplication(): void {\r\n    setActivePinia(this.#store);\r\n  }\r\n\r\n  getTableStore(): Object {\r\n    return tableStore;\r\n  }\r\n}\r\n"],"names":["dataStore","defineStore","state","userid","sessid","signedParameters","Application","data","components","CatalogElement","template","computed","mapState","methods","mounted","CatalogSection","rootNode","options","createPinia","document","querySelector","self","BitrixVue","createApp","name","use","mount","setActivePinia","tableStore"],"mappings":";;;;;EAEO,IAAMA,SAAS,GAAGC,yBAAW,CAAC,MAAM,EAAE;IAC3CC,KAAK,EAAE;MAAA,OAAO;QACZC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,gBAAgB,EAAE;OACnB;;EACH,CAAC,CAAC;;;;ACRF,EAOO,IAAMC,WAAW,GAAG;IACzBC,IAAI,kBAAG;MACL,OAAO,EAAE;KACV;IACDC,UAAU,EAAE;MACVC,cAAc,EAAdA;KACD;;;IAGDC,QAAQ,kIAIR;IACAC,QAAQ,oBACHC,sBAAQ,CAACZ,SAAS,EAAE,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC,CAC1D;IACDa,OAAO,EAAE;;;;;;;;KAQR;IACDC,OAAO,qBAAG;EACZ,CAAC;;;;AClCD,EAG0C;EAAA;EAAA;AAE1C,MAAaC,cAAc;IAKzB,wBAAYC,QAAQ,EAAEC,OAAO,EAAQ;MAAA;MAAA;QAAA;QAAA;;MAAA;QAAA;QAAA;;MAAA;QAAA;QAAA;;MACnC,sCAAI,UAAUC,yBAAW,EAAE;MAC3B,sCAAI,aAAaC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC;MACjD,IAAI,CAACC,OAAO,GAAGA,OAAO;;IACvB;MAAA;MAAA,sBAEW;QACV,IAAMI,IAAI,GAAG,IAAI;QAEjB,sCAAI,gBAAgBC,iBAAS,CAACC,SAAS,CAAC;UACtCC,IAAI,EAAE,iBAAiB;UACvBhB,UAAU,EAAE;YACVF,WAAW,EAAXA;WACD;UACDI,QAAQ,EAAE,gBAAgB;UAC1BI,OAAO,qBAAG;YACRd,SAAS,EAAE,CAACG,MAAM,GAAGkB,IAAI,CAACJ,OAAO,CAACd,MAAM,IAAI,EAAE;YAC9CH,SAAS,EAAE,CAACI,MAAM,GAAGiB,IAAI,CAACJ,OAAO,CAACb,MAAM,IAAI,EAAE;YAC9CJ,SAAS,EAAE,CAACK,gBAAgB,GAAGgB,IAAI,CAACJ,OAAO,CAACZ,gBAAgB,IAAI,EAAE;;SAErE,CAAC;QAEF,sCAAI,gBAAcoB,GAAG,mCAAC,IAAI,UAAQ;QAClC,sCAAI,gBAAcC,KAAK,mCAAC,IAAI,aAAW;;;MACxC;MAAA,oDAEyC;QACxCC,4BAAc,mCAAC,IAAI,UAAQ;;;MAC5B;MAAA,gCAEuB;QACtB,OAAOC,UAAU;;;IAClB;EAAA;;;;;;;;"}